% load "renkon.rb"

`timescale 1 ns / 1 ps

module test_renkon_ctrl;
`include "renkon.vh"

    /*AUTOREGINPUT*/

    /*AUTOWIRE*/

    //clock
    always
    begin
        clk = 0;
        #(STEP/2);
        clk = 1;
        #(STEP/2);
    end

    integer fp;
    initial
    begin
      fp = $fopen("test_newctrl_true.dat");
        xrst = 0;
        #(STEP);
        xrst = 1;
        req = 0;
        input_addr = 0;
        weight_addr = 0;
        output_addr = 0;
        total_in = 20;
        total_out = 50;
        img_size = 12;
        fil_size = 5;
        #(STEP);
        #(STEP);
        req = 1;
        #(STEP);
        req = 0;
        while (!ack) #(STEP);
        #(STEP*5);
        //#(STEP*25000);
        $finish();
    end

    always
    begin
        #(STEP/2-1);
        $display(
          "%5d: ", $time/STEP,
          "| ",
          "%d ", xrst,
          "%d ", req,
          "%d ", input_addr,
          "%d ", weight_addr,
          "%d ", output_addr,
          "%d ", total_in,
          "%d ", total_out,
          "%d ", img_size,
          "%d ", fil_size,
          "| ",
          "%d ", ack,
          "%d ", wreg_we,
          "%d ", conv_oe,
          "%d ", pool_oe,
          "%d ", mem_input_addr,
          "%d ", mem_weight_addr,
          "%d ", mem_feat_we,
          "%d ", mem_feat_rst,
          "%d ", mem_feat_addr,
          "%d ", mem_feat_addr_d1,
          "%d ", mem_output_we,
          "%d ", mem_output_addr,
          "| ",
          "%d ", dut0.ctrl.r_conv_x,
          "%d ", dut0.ctrl.r_conv_y,
          "| ",
          "%d ", dut0.ctrl.r_pool_x,
          "%d ", dut0.ctrl.r_pool_y,
        );
        $fdisplay(fp,
          "%5d: ", $time/STEP,
          //"| ",
          //"%d ", xrst,
          //"%d ", req,
          //"%d ", input_addr,
          //"%d ", weight_addr,
          //"%d ", output_addr,
          //"%d ", total_in,
          //"%d ", total_out,
          //"%d ", img_size,
          //"%d ", fil_size,
          "| ",
          "%d ", ack,
          "%d ", wreg_we,
          "%d ", conv_oe,
          "%d ", pool_oe,
          "%d ", mem_input_addr,
          "%d ", mem_weight_addr,
          "%d ", mem_feat_we,
          "%d ", mem_feat_rst,
          "%d ", mem_feat_addr,
          "%d ", mem_feat_addr_d1,
          "%d ", mem_output_we,
          "%d ", mem_output_addr,
          "| ",
          "%d ", dut0.ctrl.r_conv_x,
          "%d ", dut0.ctrl.r_conv_y,
          "| ",
          "%d ", dut0.ctrl.r_pool_x,
          "%d ", dut0.ctrl.r_pool_y,
        );
        #(STEP/2+1);
    end

    renkon_ctrl dut0(/*AUTOINST*/);

endmodule

// Local Variables:
// verilog-library-directories:("." "..")
// End:
