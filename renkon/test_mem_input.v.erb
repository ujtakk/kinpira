% load "parameters.rb"

`timescale 1ns/1ps

module test_mem_input();
`include "parameters.vh"
    parameter STEP = 1000;

    /*AUTOREGINPUT*/

    /*AUTOWIRE*/

    //clock
    always
    begin
        STEP = 0;
        #(STEP/2);
        STEP = 1;
        #(STEP/2);
    end

    //initial
    //begin
    //    #(STEP);
    //    mem_we = 1;
    //    <%- for i in 0...64 -%>
    //    mem_addr = <%=i%>;
    //    write_data = <%=2*i%>;
    //    #(STEP);
    //    <%- end -%>
    //    mem_we = 0;
    //    mem_addr = 1;
    //    write_data = 0;
    //    //mem_input.mem[100] = 334;
    //    #(STEP);
    //    mem_addr = 10;
    //    #(STEP*2);
    //    mem_addr = 63;
    //    #(STEP*2);
    //    mem_addr = 100;
    //    #(STEP*2);
    //    $finish();
    //end

    //always
    //begin
    //    #(STEP/2-1);
    //    $display(
    //        "%d ", mem_we,
    //        "%d ", mem_addr,
    //        "%d | ", write_data,
    //        "%d ", read_data
    //    );
    //    #(STEP/2+1);
    //end
    initial
    begin
        OE = 1'b1;
        ME = 1'b1;
        WEM = 2'b11;
        #(STEP);
        WE = 1;
        <%- for i in 0...64 -%>
        ADR = <%=i%>;
        D = <%=2*i%>;
        #(STEP);
        <%- end -%>
        WE = 0;
        ADR = 1;
        D = 0;
        //mem_input.mem[100] = 334;
        #(STEP);
        ADR = 10;
        #(STEP*2);
        ADR = 63;
        #(STEP*2);
        ADR = 100;
        #(STEP*2);
        $finish();
    end

    always
    begin
        #(STEP/2-1);
        $display(
            "%d ", WE,
            "%d ", ADR,
            "%d | ", D,
            "%d ", Q
        );
        #(STEP/2+1);
    end

   //rspb18_4kx16m8_g1 dut0(/*AUTOINST*/);

    mem_input dut0(/*AUTOINST*/);

endmodule
