`timescale 1ns/1ps

module test_linebuf();
`include "parameters.vh"

  /*AUTOREGINPUT*/

  /*AUTOWIRE*/

  //clock
  always
  begin
    clk = 0;
    #(STEP/2);
    clk = 1;
    #(STEP/2);
  end

  integer i;
  integer fp;
  //flow
  initial
  begin
    fp = $fopen("test_linebuf.dat");
    xrst = 0;
    #(STEP);
    xrst = 1;
    buf_en = 1;
    img_size = 28;
    fil_size = 5;
    buf_input = 20;
    #(STEP);
    buf_en = 0;
    for (i = 1; i < 28**2; i = i + 1)
    begin
      buf_input = i % 256;
      #(STEP);
    end
    #(STEP*30);
    $finish();
  end

  //display
  always
  begin
    #(STEP/2-1);
    $display(
      "%3d: ", $time/STEP,
      "%1d ", dut0.r_state,
      "| ",
      "%3d ", buf_input,
      "%1d ", dut0.buf_en,
      "%b ",  dut0.mem_linebuf_we,
      "%d ",  dut0.mem_linebuf_addr,
      "| ",
      "%2d ", dut0.r_mem_count,
      "%2d ", dut0.r_addr_count,
      "%2d ", dut0.r_line_count,
      "%d ", dut0.r_select,
      "%3d ", dut0.read_mem0,
      "%3d ", dut0.r_buf_input,
      "%3d ", dut0.buf_input,
      <%-# 5.times do |i| -%>
      "| ",
      <%-   5.times do |j| -%>
%#      "%3d ", dut0.r_pixel<%=j%>_<%=i%>,
      "%3d ", dut0.r_pixel<%=j%>_4,
      <%-   end -%>
      <%-# end -%>
    );
    $fdisplay(fp, "TIME: %4d 4d", $time/STEP, buf_input);
    <%- for i in 0...5 -%>
    $fdisplay(fp,
      <%- for j in 0...5 -%>
      "%3d ", buf_output<%=i%>_<%=j%>,
      <%- end -%>
    );
    <%- end -%>
    $fdisplay(fp, "");
    #(STEP/2+1);
  end

  linebuf dut0(/*AUTOINST*/);

endmodule
