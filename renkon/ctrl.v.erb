% load "parameters.rb"

/* AUTO_LISP(setq verilog-auto-output-ignore-regexp
    (verilog-regexp-words `(
      <%- for n in ["begin", "valid", "end"] -%>
      "out_core_<%=n%>"
      "out_conv_<%=n%>"
      "out_bias_<%=n%>"
      "out_relu_<%=n%>"
      "out_pool_<%=n%>"
      <%- end -%>
   ))) */

module ctrl(/*AUTOARG*/);
`include "parameters.vh"

  parameter S_CORE_WAIT     = 'd0;
  parameter S_CORE_NETWORK  = 'd1;
  parameter S_CORE_INPUT    = 'd2;
  parameter S_CORE_OUTPUT   = 'd3;

  /*AUTOINPUT*/
  input                     clk;
  input                     xrst;
  input                     req;
  input                     img_we;
  input [IMGSIZE-1:0]       input_addr;
  input [IMGSIZE-1:0]       output_addr;
  input signed [DWIDTH-1:0] write_img;
  input signed [DWIDTH-1:0] write_result;
  input [CORELOG:0]         net_we;
  input [NETSIZE-1:0]       net_addr;
  input [LWIDTH-1:0]        total_in;
  input [LWIDTH-1:0]        total_out;
  input [LWIDTH-1:0]        img_size;
  input [LWIDTH-1:0]        fil_size;

  /*AUTOOUTPUT*/
  output                      ack;
  output                      wreg_we;
  output                      conv_oe;
  output                      pool_oe;
  output                      buf_feat_en;
  output                      mem_img_we;
  output [IMGSIZE-1:0]        mem_img_addr;
  output signed [DWIDTH-1:0]  write_mem_img;
  output [CORE-1:0]           mem_net_we;
  output [NETSIZE-1:0]        mem_net_addr;
  output                      mem_feat_we;
  output                      mem_feat_rst;
  output [FACCUM-1:0]         mem_feat_addr;
  output [FACCUM-1:0]         mem_feat_addr_d1;
  output [LWIDTH-1:0]         w_img_size;
  output [LWIDTH-1:0]         w_fil_size;
  output [LWIDTH-1:0]         w_fea_size;
  output [LWIDTH-1:0]         w_pool_size;

  /*AUTOWIRE*/
  <%- for n in ["begin", "valid", "end"] -%>
  wire in_core_<%=n%>;
  wire in_conv_<%=n%>;
  wire in_bias_<%=n%>;
  wire in_relu_<%=n%>;
  wire in_pool_<%=n%>;
  wire out_core_<%=n%>;
  wire out_conv_<%=n%>;
  wire out_bias_<%=n%>;
  wire out_relu_<%=n%>;
  wire out_pool_<%=n%>;
  <%- end -%>

  /*AUTOREG*/


//====================================================================
// control modules
//====================================================================

  <%- for n in ["begin", "valid", "end"] -%>
  // assign in_conv_<%=n%> = out_core_<%=n%>;
  // assign in_pool_<%=n%> = out_conv_<%=n%>;
  // assign in_core_<%=n%> = out_pool_<%=n%>;

  assign in_conv_<%=n%> = out_core_<%=n%>;
  assign in_bias_<%=n%> = out_conv_<%=n%>;
  assign in_relu_<%=n%> = out_bias_<%=n%>;
  assign in_pool_<%=n%> = out_relu_<%=n%>;
  assign in_core_<%=n%> = out_pool_<%=n%>;
  <%- end -%>

  /* ctrl_core AUTO_TEMPLATE (
      <%- for n in ["begin", "valid", "end"] -%>
      .in_<%=n%>    (in_core_<%=n%>),
      .out_<%=n%>  (out_core_<%=n%>),
      <%- end -%>
  ); */
  ctrl_core ctrl_core(/*AUTOINST*/);

  /* ctrl_conv AUTO_TEMPLATE (
      <%- for n in ["begin", "valid", "end"] -%>
      .in_<%=n%>    (in_conv_<%=n%>),
      .out_<%=n%>  (out_conv_<%=n%>),
      <%- end -%>
  ); */
  ctrl_conv ctrl_conv(/*AUTOINST*/);

  /* ctrl_bias AUTO_TEMPLATE (
      <%- for n in ["begin", "valid", "end"] -%>
      .in_<%=n%>   (in_bias_<%=n%>),
      .out_<%=n%> (out_bias_<%=n%>),
      <%- end -%>
  ); */
  ctrl_bias ctrl_bias(/*AUTOINST*/);

  /* ctrl_relu AUTO_TEMPLATE (
      <%- for n in ["begin", "valid", "end"] -%>
      .in_<%=n%>   (in_relu_<%=n%>),
      .out_<%=n%> (out_relu_<%=n%>),
      <%- end -%>
  ); */
  ctrl_relu ctrl_relu(/*AUTOINST*/);

  /* ctrl_pool AUTO_TEMPLATE (
      <%- for n in ["begin", "valid", "end"] -%>
      .in_<%=n%>    (in_pool_<%=n%>),
      .out_<%=n%>  (out_pool_<%=n%>),
      <%- end -%>
  ); */
  ctrl_pool ctrl_pool(/*AUTOINST*/);

endmodule
