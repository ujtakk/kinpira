% load "renkon.rb"

`timescale 1 ns / 1 ps

module test_renkon_ctrl_pool;
`include "renkon.vh"

  /*AUTOREGINPUT*/

  /*AUTOWIRE*/

  //clock
  always
  begin
    clk = 0;
    #(STEP/2);
    clk = 1;
    #(STEP/2);
  end

  //flow
  initial
  begin
    xrst = 0;
    #(STEP);
    xrst = 1;
    in_begin = 0;
    in_valid = 0;
    in_end = 0;
    fea_size = 0;
    pool_size = 0;
    #(STEP);
    fea_size = 8;
    pool_size = 2;
    in_send;
    while (!out_end) #(STEP);
    #(STEP*5);
    $finish();
  end

  //display
  always
  begin
    #(STEP/2-1);
    $display(
      "%d: ", $time/STEP,
      "%d ", dut0.r_state,
      "| ",
      "%d ", xrst,
      "%d ", in_begin,
      "%d ", in_valid,
      "%d ", in_end,
      "%d ", fea_size,
      "%d ", pool_size,
      "| ",
      "%d ", out_begin,
      "%d ", out_valid,
      "%d ", out_end,
      "| ",
      "%d ", dut0.r_pool_x,
      "%d ", dut0.r_pool_y,
      "%d ", dut0.r_pool_exec_x,
      "%d ", dut0.r_pool_exec_y,
    );
    #(STEP/2+1);
  end

  renkon_ctrl_pool dut0(/*AUTOINST*/);

  task in_send;
    integer i, j;
    begin
      in_begin = 1;
      in_valid = 0;
      in_end   = 0;
      #(STEP);
      in_begin = 0;
      for (i = 0; i < 8; i = i + 1)
      begin
        for (j = 0; j < 8; j = j + 1)
        begin
          if (i == 0 && j == 0)
          begin
            in_valid = 1;
            #(STEP);
            in_valid = 0;
          end
          else if (i == 7 && j == 7)
          begin
            in_end = 1;
            in_valid = 1;
            #(STEP);
            in_end = 0;
            in_valid = 0;
          end
          else
          begin
            in_valid = 1;
            #(STEP);
            in_valid = 0;
          end
        end
        //#(STEP*4);
      end
    end
  endtask
endmodule

// Local Variables:
// verilog-library-directories:("." "..")
// End:
