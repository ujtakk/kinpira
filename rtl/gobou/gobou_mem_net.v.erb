% load "gobou.rb"
% less = false

module gobou_mem_net(/*AUTOARG*/);
`include "gobou.vh"
% if less
  parameter WORDS = 25345;
% else
  parameter WORDS = 2 ** GOBOU_NETSIZE;
% end

  /*AUTOINPUT*/
  input                     clk;
  input                     mem_we;
  input [GOBOU_NETSIZE-1:0] mem_addr;
  input signed [DWIDTH-1:0] mem_wdata;

  /*AUTOOUTPUT*/
  output signed [DWIDTH-1:0] mem_rdata;

  /*AUTOWIRE*/

  /*AUTOREG*/
% if less
  reg signed [DWIDTH-1-6:0] mem [WORDS-1:0];
% else
  reg signed [DWIDTH-1:0] mem [WORDS-1:0];
% end
  reg [GOBOU_NETSIZE-1:0]        addr_reg;

% if less
  assign mem_rdata = $signed({{6{mem[addr_reg][DWIDTH-1-6]}}, mem[addr_reg]});
% else
  assign mem_rdata = mem[addr_reg];
% end

  always @(posedge clk)
  begin
    if (mem_we)
% if less
      mem[mem_addr] <= mem_wdata[DWIDTH-1-6:0];
% else
      mem[mem_addr] <= mem_wdata;
% end
    addr_reg <= mem_addr;
  end

endmodule
